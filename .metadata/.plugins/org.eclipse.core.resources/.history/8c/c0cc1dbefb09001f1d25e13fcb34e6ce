package interviewpractice;

import java.util.Stack;

public class CheckParenthesis {
	
	
	
	public static boolean isparentmatching(String s)
	{
		Stack<Character> st = new Stack<Character>();
		
		for(int i=0;i<s.length();i++)
		{
			char c = s.charAt(i);
			
			if(isopening(c))
			{
				st.push(c);
			}
			else
			{
				if(s.isEmpty())
				{
					return false;
				}
				else if(!ismatchinh(st.peek(), c))
				{
					return false;
				}
				else
				{
					st.pop();
				}
			}
		}
		 return st.isEmpty();
	}
	
	
	
	public static boolean isopening(char c)
	{
		return c=='(' || c=='{' || c=='[';
	}
	
	public static boolean ismatchinh(char a , char b)
	{
		return (a=='('&&b==')')||(a=='{' && b =='}')|| (a=='[' && b==']');
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String s ="(({{[))}}]";
		boolean result = isparentmatching(s);
		System.out.println(result);

	}

}
